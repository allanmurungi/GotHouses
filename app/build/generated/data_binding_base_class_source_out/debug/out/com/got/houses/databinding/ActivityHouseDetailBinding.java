// Generated by view binder compiler. Do not edit!
package com.got.houses.databinding;

import android.support.design.widget.AppBarLayout;
import android.support.design.widget.CollapsingToolbarLayout;
import android.support.design.widget.CoordinatorLayout;
import android.support.v4.widget.NestedScrollView;
import android.support.v7.widget.Toolbar;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.got.houses.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHouseDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final Button btnUpdate;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final NestedScrollView destinyDetailContainer;

  @NonNull
  public final Toolbar detailToolbar;

  @NonNull
  public final EditText etCity;

  @NonNull
  public final EditText etCountry;

  @NonNull
  public final EditText etDescription;

  private ActivityHouseDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBar, @NonNull Button btnDelete, @NonNull Button btnUpdate,
      @NonNull CollapsingToolbarLayout collapsingToolbar,
      @NonNull NestedScrollView destinyDetailContainer, @NonNull Toolbar detailToolbar,
      @NonNull EditText etCity, @NonNull EditText etCountry, @NonNull EditText etDescription) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.btnDelete = btnDelete;
    this.btnUpdate = btnUpdate;
    this.collapsingToolbar = collapsingToolbar;
    this.destinyDetailContainer = destinyDetailContainer;
    this.detailToolbar = detailToolbar;
    this.etCity = etCity;
    this.etCountry = etCountry;
    this.etDescription = etDescription;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHouseDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHouseDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_house_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHouseDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = rootView.findViewById(id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.btn_delete;
      Button btnDelete = rootView.findViewById(id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btn_update;
      Button btnUpdate = rootView.findViewById(id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.collapsing_toolbar;
      CollapsingToolbarLayout collapsingToolbar = rootView.findViewById(id);
      if (collapsingToolbar == null) {
        break missingId;
      }

      id = R.id.destiny_detail_container;
      NestedScrollView destinyDetailContainer = rootView.findViewById(id);
      if (destinyDetailContainer == null) {
        break missingId;
      }

      id = R.id.detail_toolbar;
      Toolbar detailToolbar = rootView.findViewById(id);
      if (detailToolbar == null) {
        break missingId;
      }

      id = R.id.et_city;
      EditText etCity = rootView.findViewById(id);
      if (etCity == null) {
        break missingId;
      }

      id = R.id.et_country;
      EditText etCountry = rootView.findViewById(id);
      if (etCountry == null) {
        break missingId;
      }

      id = R.id.et_description;
      EditText etDescription = rootView.findViewById(id);
      if (etDescription == null) {
        break missingId;
      }

      return new ActivityHouseDetailBinding((CoordinatorLayout) rootView, appBar, btnDelete,
          btnUpdate, collapsingToolbar, destinyDetailContainer, detailToolbar, etCity, etCountry,
          etDescription);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
